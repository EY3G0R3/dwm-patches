Author: Jan Christoph Ebersbach <jceb@e-jc.de>
URL: no URL yet
This patch is an addition to the single_tagset patch.  It keeps the position of
a floating client when it's moved to another monitor.  This applies also and
especially to tags that are displayed on another monitor.

Index: dwm/dwm/dwm.c
===================================================================
--- dwm.orig/dwm/dwm.c	2013-10-21 08:55:59.894967731 +0200
+++ dwm/dwm/dwm.c	2013-10-21 18:58:23.000000000 +0200
@@ -1676,6 +1676,8 @@
 	if(ISVISIBLE(c, c->mon)) { /* show clients top down */
 		XMoveWindow(dpy, c->win, c->x, c->y);
 		if((!c->mon->lt[c->mon->sellt]->arrange || c->isfloating) && !c->isfullscreen)
+			if(c->isfloating)
+				keepfloatingposition(c);
 			resize(c, c->x, c->y, c->w, c->h, False);
 		showhide(c->snext);
 	}
Index: dwm/dwm/keepfloatingposition.c
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ dwm/dwm/keepfloatingposition.c	2013-10-21 18:55:51.351005702 +0200
@@ -0,0 +1,36 @@
+static void
+keepfloatingposition(Client *c) {
+	Monitor *m;
+	int cmmx = c->mon->mx;
+	int cmmy = c->mon->my;
+	int cmmw = c->mon->mw;
+	int cmmh = c->mon->mh;
+	int mmx, mmy;
+	FILE *x = fopen("/tmp/x", "w");
+	fprintf(x, "mon mx: %d, my: %d, mw: %d, mh: %d\n", c->mon->mx, c->mon->my, c->mon->mw, c->mon->mh);
+	fprintf(x, "start x: %d, y: %d, w: %d, h: %d\n", c->x, c->y, c->w, c->h);
+	if(!(cmmx <= c->x &&
+			cmmx + cmmw - 1 >= c->x &&
+			cmmy <= c->y &&
+			cmmy + cmmh - 1 >= c->y))
+		for(m = mons; m; m = m->next) {
+			mmx = m->mx;
+			mmy = m->my;
+			if(mmx <= c->x &&
+					mmx + m->mw - 1 >= c->x &&
+					mmy <= c->y &&
+					mmy + m->mh - 1 >= c->y) {
+				fprintf(x, "resize\n");
+				c->x = c->x - mmx + cmmx;
+				c->y = c->y - mmy + cmmy;
+				if(c->x + c->w  + 2 * c->bw > cmmx + cmmw - 1)
+					c->x -= c->x + c->w + 2 * c->bw - cmmx - cmmw;
+				if(c->y + c->h + 2 * c->bw > cmmy + cmmh - 1)
+					c->y -= c->y + c->h + 2 * c->bw - cmmy - cmmh;
+				resizeclient(c, c->x, c->y, c->w, c->h);
+				break;
+			}
+		}
+	fprintf(x, "end x: %d, y: %d, w: %d, h: %d\n", c->x, c->y, c->w, c->h);
+	fclose(x);
+}
